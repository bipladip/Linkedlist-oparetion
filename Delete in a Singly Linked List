#include <stdio.h>
#include <stdlib.h>

struct Node {
    int data;
    struct Node* next;
};

void display(struct Node* head) {
    struct Node* temp = head;
    while (temp != NULL) {
        printf("%d -> ", temp->data);
        temp = temp->next;
    }
    printf("NULL\n");
}

struct Node* deleteNode(struct Node* head, int key) {
    struct Node* temp = head;
    struct Node* prev = NULL;

    // Case 1: If the head node itself has the key
    if (temp != NULL && temp->data == key) {
        head = temp->next; // Change head
        free(temp); // Free memory
        return head;
    }

    // Case 2: Search for the key
    while (temp != NULL && temp->data != key) {
        prev = temp;
        temp = temp->next;
    }

    // If key not found
    if (temp == NULL) return head;

    // Unlink the node
    prev->next = temp->next;
    free(temp);
    return head;
}

int main() {
    // Creating nodes
    struct Node* head = malloc(sizeof(struct Node));
    struct Node* second = malloc(sizeof(struct Node));
    struct Node* third = malloc(sizeof(struct Node));

    head->data = 10; head->next = second;
    second->data = 20; second->next = third;
    third->data = 30; third->next = NULL;

    printf("Original List: ");
    display(head);

    head = deleteNode(head, 20); // Delete node with value 20

    printf("After Deletion: ");
    display(head);

    return 0;
}

